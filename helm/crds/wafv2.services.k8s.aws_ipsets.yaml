---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: ipsets.wafv2.services.k8s.aws
spec:
  group: wafv2.services.k8s.aws
  names:
    kind: IPSet
    listKind: IPSetList
    plural: ipsets
    singular: ipset
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPSet is the Schema for the IPSets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              IPSetSpec defines the desired state of IPSet.

              Contains zero or more IP addresses or blocks of IP addresses specified in
              Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and
              IPv6 CIDR ranges except for /0. For information about CIDR notation, see
              the Wikipedia entry Classless Inter-Domain Routing (https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).

              WAF assigns an ARN to each IPSet that you create. To use an IP set in a rule,
              you provide the ARN to the Rule statement IPSetReferenceStatement.
            properties:
              addresses:
                items:
                  type: string
                type: array
              description:
                type: string
              ipAddressVersion:
                type: string
              name:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable once set
                  rule: self == oldSelf
              scope:
                type: string
              tags:
                items:
                  description: |-
                    A tag associated with an Amazon Web Services resource. Tags are key:value
                    pairs that you can use to categorize and manage your resources, for purposes
                    like billing or other management. Typically, the tag key represents a category,
                    such as "environment", and the tag value represents a specific value within
                    that category, such as "test," "development," or "production". Or you might
                    set the tag key to "customer" and the value to the customer name or ID. You
                    can specify one or more tags to add to each Amazon Web Services resource,
                    up to 50 tags for a resource.

                    You can tag the Amazon Web Services resources that you manage through WAF:
                    web ACLs, rule groups, IP sets, and regex pattern sets. You can't manage
                    or view tags through the WAF console.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - addresses
            - ipAddressVersion
            - name
            - scope
            type: object
          status:
            description: IPSetStatus defines the observed state of IPSet
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRs managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              id:
                description: |-
                  A unique identifier for the set. This ID is returned in the responses to
                  create and list commands. You provide it to operations like update and delete.
                type: string
              lockToken:
                description: |-
                  A token used for optimistic locking. WAF returns a token to your get and
                  list requests, to mark the state of the entity at the time of the request.
                  To make changes to the entity associated with the token, you provide the
                  token to operations like update and delete. WAF uses the token to ensure
                  that no changes have been made to the entity since you last retrieved it.
                  If a change has been made, the update fails with a WAFOptimisticLockException.
                  If this happens, perform another get, and use the new token returned by that
                  operation.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
