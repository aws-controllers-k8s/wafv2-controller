//go:build !ignore_autogenerated

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSManagedRulesACFPRuleSet) DeepCopyInto(out *AWSManagedRulesACFPRuleSet) {
	*out = *in
	if in.CreationPath != nil {
		in, out := &in.CreationPath, &out.CreationPath
		*out = new(string)
		**out = **in
	}
	if in.EnableRegexInPath != nil {
		in, out := &in.EnableRegexInPath, &out.EnableRegexInPath
		*out = new(bool)
		**out = **in
	}
	if in.RegistrationPagePath != nil {
		in, out := &in.RegistrationPagePath, &out.RegistrationPagePath
		*out = new(string)
		**out = **in
	}
	if in.RequestInspection != nil {
		in, out := &in.RequestInspection, &out.RequestInspection
		*out = new(RequestInspectionACFP)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseInspection != nil {
		in, out := &in.ResponseInspection, &out.ResponseInspection
		*out = new(ResponseInspection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSManagedRulesACFPRuleSet.
func (in *AWSManagedRulesACFPRuleSet) DeepCopy() *AWSManagedRulesACFPRuleSet {
	if in == nil {
		return nil
	}
	out := new(AWSManagedRulesACFPRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSManagedRulesATPRuleSet) DeepCopyInto(out *AWSManagedRulesATPRuleSet) {
	*out = *in
	if in.EnableRegexInPath != nil {
		in, out := &in.EnableRegexInPath, &out.EnableRegexInPath
		*out = new(bool)
		**out = **in
	}
	if in.LoginPath != nil {
		in, out := &in.LoginPath, &out.LoginPath
		*out = new(string)
		**out = **in
	}
	if in.RequestInspection != nil {
		in, out := &in.RequestInspection, &out.RequestInspection
		*out = new(RequestInspection)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseInspection != nil {
		in, out := &in.ResponseInspection, &out.ResponseInspection
		*out = new(ResponseInspection)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSManagedRulesATPRuleSet.
func (in *AWSManagedRulesATPRuleSet) DeepCopy() *AWSManagedRulesATPRuleSet {
	if in == nil {
		return nil
	}
	out := new(AWSManagedRulesATPRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSManagedRulesBotControlRuleSet) DeepCopyInto(out *AWSManagedRulesBotControlRuleSet) {
	*out = *in
	if in.EnableMachineLearning != nil {
		in, out := &in.EnableMachineLearning, &out.EnableMachineLearning
		*out = new(bool)
		**out = **in
	}
	if in.InspectionLevel != nil {
		in, out := &in.InspectionLevel, &out.InspectionLevel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSManagedRulesBotControlRuleSet.
func (in *AWSManagedRulesBotControlRuleSet) DeepCopy() *AWSManagedRulesBotControlRuleSet {
	if in == nil {
		return nil
	}
	out := new(AWSManagedRulesBotControlRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressField) DeepCopyInto(out *AddressField) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressField.
func (in *AddressField) DeepCopy() *AddressField {
	if in == nil {
		return nil
	}
	out := new(AddressField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowAction) DeepCopyInto(out *AllowAction) {
	*out = *in
	if in.CustomRequestHandling != nil {
		in, out := &in.CustomRequestHandling, &out.CustomRequestHandling
		*out = new(CustomRequestHandling)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowAction.
func (in *AllowAction) DeepCopy() *AllowAction {
	if in == nil {
		return nil
	}
	out := new(AllowAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockAction) DeepCopyInto(out *BlockAction) {
	*out = *in
	if in.CustomResponse != nil {
		in, out := &in.CustomResponse, &out.CustomResponse
		*out = new(CustomResponse)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockAction.
func (in *BlockAction) DeepCopy() *BlockAction {
	if in == nil {
		return nil
	}
	out := new(BlockAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Body) DeepCopyInto(out *Body) {
	*out = *in
	if in.OversizeHandling != nil {
		in, out := &in.OversizeHandling, &out.OversizeHandling
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Body.
func (in *Body) DeepCopy() *Body {
	if in == nil {
		return nil
	}
	out := new(Body)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ByteMatchStatement) DeepCopyInto(out *ByteMatchStatement) {
	*out = *in
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.PositionalConstraint != nil {
		in, out := &in.PositionalConstraint, &out.PositionalConstraint
		*out = new(string)
		**out = **in
	}
	if in.SearchString != nil {
		in, out := &in.SearchString, &out.SearchString
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ByteMatchStatement.
func (in *ByteMatchStatement) DeepCopy() *ByteMatchStatement {
	if in == nil {
		return nil
	}
	out := new(ByteMatchStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptchaAction) DeepCopyInto(out *CaptchaAction) {
	*out = *in
	if in.CustomRequestHandling != nil {
		in, out := &in.CustomRequestHandling, &out.CustomRequestHandling
		*out = new(CustomRequestHandling)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptchaAction.
func (in *CaptchaAction) DeepCopy() *CaptchaAction {
	if in == nil {
		return nil
	}
	out := new(CaptchaAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptchaConfig) DeepCopyInto(out *CaptchaConfig) {
	*out = *in
	if in.ImmunityTimeProperty != nil {
		in, out := &in.ImmunityTimeProperty, &out.ImmunityTimeProperty
		*out = new(ImmunityTimeProperty)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptchaConfig.
func (in *CaptchaConfig) DeepCopy() *CaptchaConfig {
	if in == nil {
		return nil
	}
	out := new(CaptchaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChallengeAction) DeepCopyInto(out *ChallengeAction) {
	*out = *in
	if in.CustomRequestHandling != nil {
		in, out := &in.CustomRequestHandling, &out.CustomRequestHandling
		*out = new(CustomRequestHandling)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChallengeAction.
func (in *ChallengeAction) DeepCopy() *ChallengeAction {
	if in == nil {
		return nil
	}
	out := new(ChallengeAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChallengeConfig) DeepCopyInto(out *ChallengeConfig) {
	*out = *in
	if in.ImmunityTimeProperty != nil {
		in, out := &in.ImmunityTimeProperty, &out.ImmunityTimeProperty
		*out = new(ImmunityTimeProperty)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChallengeConfig.
func (in *ChallengeConfig) DeepCopy() *ChallengeConfig {
	if in == nil {
		return nil
	}
	out := new(ChallengeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieMatchPattern) DeepCopyInto(out *CookieMatchPattern) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExcludedCookies != nil {
		in, out := &in.ExcludedCookies, &out.ExcludedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedCookies != nil {
		in, out := &in.IncludedCookies, &out.IncludedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieMatchPattern.
func (in *CookieMatchPattern) DeepCopy() *CookieMatchPattern {
	if in == nil {
		return nil
	}
	out := new(CookieMatchPattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cookies) DeepCopyInto(out *Cookies) {
	*out = *in
	if in.MatchPattern != nil {
		in, out := &in.MatchPattern, &out.MatchPattern
		*out = new(CookieMatchPattern)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchScope != nil {
		in, out := &in.MatchScope, &out.MatchScope
		*out = new(string)
		**out = **in
	}
	if in.OversizeHandling != nil {
		in, out := &in.OversizeHandling, &out.OversizeHandling
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cookies.
func (in *Cookies) DeepCopy() *Cookies {
	if in == nil {
		return nil
	}
	out := new(Cookies)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CountAction) DeepCopyInto(out *CountAction) {
	*out = *in
	if in.CustomRequestHandling != nil {
		in, out := &in.CustomRequestHandling, &out.CustomRequestHandling
		*out = new(CustomRequestHandling)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CountAction.
func (in *CountAction) DeepCopy() *CountAction {
	if in == nil {
		return nil
	}
	out := new(CountAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPHeader) DeepCopyInto(out *CustomHTTPHeader) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPHeader.
func (in *CustomHTTPHeader) DeepCopy() *CustomHTTPHeader {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomRequestHandling) DeepCopyInto(out *CustomRequestHandling) {
	*out = *in
	if in.InsertHeaders != nil {
		in, out := &in.InsertHeaders, &out.InsertHeaders
		*out = make([]*CustomHTTPHeader, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CustomHTTPHeader)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomRequestHandling.
func (in *CustomRequestHandling) DeepCopy() *CustomRequestHandling {
	if in == nil {
		return nil
	}
	out := new(CustomRequestHandling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomResponse) DeepCopyInto(out *CustomResponse) {
	*out = *in
	if in.CustomResponseBodyKey != nil {
		in, out := &in.CustomResponseBodyKey, &out.CustomResponseBodyKey
		*out = new(string)
		**out = **in
	}
	if in.ResponseCode != nil {
		in, out := &in.ResponseCode, &out.ResponseCode
		*out = new(int64)
		**out = **in
	}
	if in.ResponseHeaders != nil {
		in, out := &in.ResponseHeaders, &out.ResponseHeaders
		*out = make([]*CustomHTTPHeader, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CustomHTTPHeader)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomResponse.
func (in *CustomResponse) DeepCopy() *CustomResponse {
	if in == nil {
		return nil
	}
	out := new(CustomResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomResponseBody) DeepCopyInto(out *CustomResponseBody) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomResponseBody.
func (in *CustomResponseBody) DeepCopy() *CustomResponseBody {
	if in == nil {
		return nil
	}
	out := new(CustomResponseBody)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAction) DeepCopyInto(out *DefaultAction) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = new(AllowAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Block != nil {
		in, out := &in.Block, &out.Block
		*out = new(BlockAction)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAction.
func (in *DefaultAction) DeepCopy() *DefaultAction {
	if in == nil {
		return nil
	}
	out := new(DefaultAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailField) DeepCopyInto(out *EmailField) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailField.
func (in *EmailField) DeepCopy() *EmailField {
	if in == nil {
		return nil
	}
	out := new(EmailField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedRule) DeepCopyInto(out *ExcludedRule) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedRule.
func (in *ExcludedRule) DeepCopy() *ExcludedRule {
	if in == nil {
		return nil
	}
	out := new(ExcludedRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldToMatch) DeepCopyInto(out *FieldToMatch) {
	*out = *in
	if in.AllQueryArguments != nil {
		in, out := &in.AllQueryArguments, &out.AllQueryArguments
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(Body)
		(*in).DeepCopyInto(*out)
	}
	if in.Cookies != nil {
		in, out := &in.Cookies, &out.Cookies
		*out = new(Cookies)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderOrder != nil {
		in, out := &in.HeaderOrder, &out.HeaderOrder
		*out = new(HeaderOrder)
		(*in).DeepCopyInto(*out)
	}
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = new(Headers)
		(*in).DeepCopyInto(*out)
	}
	if in.JA3Fingerprint != nil {
		in, out := &in.JA3Fingerprint, &out.JA3Fingerprint
		*out = new(JA3Fingerprint)
		(*in).DeepCopyInto(*out)
	}
	if in.JSONBody != nil {
		in, out := &in.JSONBody, &out.JSONBody
		*out = new(JSONBody)
		(*in).DeepCopyInto(*out)
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SingleHeader != nil {
		in, out := &in.SingleHeader, &out.SingleHeader
		*out = new(SingleHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.SingleQueryArgument != nil {
		in, out := &in.SingleQueryArgument, &out.SingleQueryArgument
		*out = new(SingleQueryArgument)
		(*in).DeepCopyInto(*out)
	}
	if in.URIPath != nil {
		in, out := &in.URIPath, &out.URIPath
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldToMatch.
func (in *FieldToMatch) DeepCopy() *FieldToMatch {
	if in == nil {
		return nil
	}
	out := new(FieldToMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallManagerRuleGroup) DeepCopyInto(out *FirewallManagerRuleGroup) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideAction != nil {
		in, out := &in.OverrideAction, &out.OverrideAction
		*out = new(OverrideAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.VisibilityConfig != nil {
		in, out := &in.VisibilityConfig, &out.VisibilityConfig
		*out = new(VisibilityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallManagerRuleGroup.
func (in *FirewallManagerRuleGroup) DeepCopy() *FirewallManagerRuleGroup {
	if in == nil {
		return nil
	}
	out := new(FirewallManagerRuleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallManagerStatement) DeepCopyInto(out *FirewallManagerStatement) {
	*out = *in
	if in.ManagedRuleGroupStatement != nil {
		in, out := &in.ManagedRuleGroupStatement, &out.ManagedRuleGroupStatement
		*out = new(ManagedRuleGroupStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleGroupReferenceStatement != nil {
		in, out := &in.RuleGroupReferenceStatement, &out.RuleGroupReferenceStatement
		*out = new(RuleGroupReferenceStatement)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallManagerStatement.
func (in *FirewallManagerStatement) DeepCopy() *FirewallManagerStatement {
	if in == nil {
		return nil
	}
	out := new(FirewallManagerStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardedIPConfig) DeepCopyInto(out *ForwardedIPConfig) {
	*out = *in
	if in.FallbackBehavior != nil {
		in, out := &in.FallbackBehavior, &out.FallbackBehavior
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardedIPConfig.
func (in *ForwardedIPConfig) DeepCopy() *ForwardedIPConfig {
	if in == nil {
		return nil
	}
	out := new(ForwardedIPConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeoMatchStatement) DeepCopyInto(out *GeoMatchStatement) {
	*out = *in
	if in.CountryCodes != nil {
		in, out := &in.CountryCodes, &out.CountryCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ForwardedIPConfig != nil {
		in, out := &in.ForwardedIPConfig, &out.ForwardedIPConfig
		*out = new(ForwardedIPConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeoMatchStatement.
func (in *GeoMatchStatement) DeepCopy() *GeoMatchStatement {
	if in == nil {
		return nil
	}
	out := new(GeoMatchStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchPattern) DeepCopyInto(out *HeaderMatchPattern) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExcludedHeaders != nil {
		in, out := &in.ExcludedHeaders, &out.ExcludedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludedHeaders != nil {
		in, out := &in.IncludedHeaders, &out.IncludedHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchPattern.
func (in *HeaderMatchPattern) DeepCopy() *HeaderMatchPattern {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchPattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderOrder) DeepCopyInto(out *HeaderOrder) {
	*out = *in
	if in.OversizeHandling != nil {
		in, out := &in.OversizeHandling, &out.OversizeHandling
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderOrder.
func (in *HeaderOrder) DeepCopy() *HeaderOrder {
	if in == nil {
		return nil
	}
	out := new(HeaderOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Headers) DeepCopyInto(out *Headers) {
	*out = *in
	if in.MatchPattern != nil {
		in, out := &in.MatchPattern, &out.MatchPattern
		*out = new(HeaderMatchPattern)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchScope != nil {
		in, out := &in.MatchScope, &out.MatchScope
		*out = new(string)
		**out = **in
	}
	if in.OversizeHandling != nil {
		in, out := &in.OversizeHandling, &out.OversizeHandling
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Headers.
func (in *Headers) DeepCopy() *Headers {
	if in == nil {
		return nil
	}
	out := new(Headers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSet) DeepCopyInto(out *IPSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSet.
func (in *IPSet) DeepCopy() *IPSet {
	if in == nil {
		return nil
	}
	out := new(IPSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetForwardedIPConfig) DeepCopyInto(out *IPSetForwardedIPConfig) {
	*out = *in
	if in.FallbackBehavior != nil {
		in, out := &in.FallbackBehavior, &out.FallbackBehavior
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.Position != nil {
		in, out := &in.Position, &out.Position
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetForwardedIPConfig.
func (in *IPSetForwardedIPConfig) DeepCopy() *IPSetForwardedIPConfig {
	if in == nil {
		return nil
	}
	out := new(IPSetForwardedIPConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetList) DeepCopyInto(out *IPSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetList.
func (in *IPSetList) DeepCopy() *IPSetList {
	if in == nil {
		return nil
	}
	out := new(IPSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetReferenceStatement) DeepCopyInto(out *IPSetReferenceStatement) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.IPSetForwardedIPConfig != nil {
		in, out := &in.IPSetForwardedIPConfig, &out.IPSetForwardedIPConfig
		*out = new(IPSetForwardedIPConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetReferenceStatement.
func (in *IPSetReferenceStatement) DeepCopy() *IPSetReferenceStatement {
	if in == nil {
		return nil
	}
	out := new(IPSetReferenceStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetSpec) DeepCopyInto(out *IPSetSpec) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddressVersion != nil {
		in, out := &in.IPAddressVersion, &out.IPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetSpec.
func (in *IPSetSpec) DeepCopy() *IPSetSpec {
	if in == nil {
		return nil
	}
	out := new(IPSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetStatus) DeepCopyInto(out *IPSetStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetStatus.
func (in *IPSetStatus) DeepCopy() *IPSetStatus {
	if in == nil {
		return nil
	}
	out := new(IPSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSetSummary) DeepCopyInto(out *IPSetSummary) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSetSummary.
func (in *IPSetSummary) DeepCopy() *IPSetSummary {
	if in == nil {
		return nil
	}
	out := new(IPSetSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSet_SDK) DeepCopyInto(out *IPSet_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddressVersion != nil {
		in, out := &in.IPAddressVersion, &out.IPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSet_SDK.
func (in *IPSet_SDK) DeepCopy() *IPSet_SDK {
	if in == nil {
		return nil
	}
	out := new(IPSet_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImmunityTimeProperty) DeepCopyInto(out *ImmunityTimeProperty) {
	*out = *in
	if in.ImmunityTime != nil {
		in, out := &in.ImmunityTime, &out.ImmunityTime
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImmunityTimeProperty.
func (in *ImmunityTimeProperty) DeepCopy() *ImmunityTimeProperty {
	if in == nil {
		return nil
	}
	out := new(ImmunityTimeProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JA3Fingerprint) DeepCopyInto(out *JA3Fingerprint) {
	*out = *in
	if in.FallbackBehavior != nil {
		in, out := &in.FallbackBehavior, &out.FallbackBehavior
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JA3Fingerprint.
func (in *JA3Fingerprint) DeepCopy() *JA3Fingerprint {
	if in == nil {
		return nil
	}
	out := new(JA3Fingerprint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONBody) DeepCopyInto(out *JSONBody) {
	*out = *in
	if in.InvalidFallbackBehavior != nil {
		in, out := &in.InvalidFallbackBehavior, &out.InvalidFallbackBehavior
		*out = new(string)
		**out = **in
	}
	if in.MatchPattern != nil {
		in, out := &in.MatchPattern, &out.MatchPattern
		*out = new(JSONMatchPattern)
		(*in).DeepCopyInto(*out)
	}
	if in.MatchScope != nil {
		in, out := &in.MatchScope, &out.MatchScope
		*out = new(string)
		**out = **in
	}
	if in.OversizeHandling != nil {
		in, out := &in.OversizeHandling, &out.OversizeHandling
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONBody.
func (in *JSONBody) DeepCopy() *JSONBody {
	if in == nil {
		return nil
	}
	out := new(JSONBody)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONMatchPattern) DeepCopyInto(out *JSONMatchPattern) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONMatchPattern.
func (in *JSONMatchPattern) DeepCopy() *JSONMatchPattern {
	if in == nil {
		return nil
	}
	out := new(JSONMatchPattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Label) DeepCopyInto(out *Label) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Label.
func (in *Label) DeepCopy() *Label {
	if in == nil {
		return nil
	}
	out := new(Label)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelMatchStatement) DeepCopyInto(out *LabelMatchStatement) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelMatchStatement.
func (in *LabelMatchStatement) DeepCopy() *LabelMatchStatement {
	if in == nil {
		return nil
	}
	out := new(LabelMatchStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelNameCondition) DeepCopyInto(out *LabelNameCondition) {
	*out = *in
	if in.LabelName != nil {
		in, out := &in.LabelName, &out.LabelName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelNameCondition.
func (in *LabelNameCondition) DeepCopy() *LabelNameCondition {
	if in == nil {
		return nil
	}
	out := new(LabelNameCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelSummary) DeepCopyInto(out *LabelSummary) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSummary.
func (in *LabelSummary) DeepCopy() *LabelSummary {
	if in == nil {
		return nil
	}
	out := new(LabelSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfiguration) DeepCopyInto(out *LoggingConfiguration) {
	*out = *in
	if in.ManagedByFirewallManager != nil {
		in, out := &in.ManagedByFirewallManager, &out.ManagedByFirewallManager
		*out = new(bool)
		**out = **in
	}
	if in.ResourceARN != nil {
		in, out := &in.ResourceARN, &out.ResourceARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfiguration.
func (in *LoggingConfiguration) DeepCopy() *LoggingConfiguration {
	if in == nil {
		return nil
	}
	out := new(LoggingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedProductDescriptor) DeepCopyInto(out *ManagedProductDescriptor) {
	*out = *in
	if in.IsAdvancedManagedRuleSet != nil {
		in, out := &in.IsAdvancedManagedRuleSet, &out.IsAdvancedManagedRuleSet
		*out = new(bool)
		**out = **in
	}
	if in.IsVersioningSupported != nil {
		in, out := &in.IsVersioningSupported, &out.IsVersioningSupported
		*out = new(bool)
		**out = **in
	}
	if in.ManagedRuleSetName != nil {
		in, out := &in.ManagedRuleSetName, &out.ManagedRuleSetName
		*out = new(string)
		**out = **in
	}
	if in.SNSTopicARN != nil {
		in, out := &in.SNSTopicARN, &out.SNSTopicARN
		*out = new(string)
		**out = **in
	}
	if in.VendorName != nil {
		in, out := &in.VendorName, &out.VendorName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedProductDescriptor.
func (in *ManagedProductDescriptor) DeepCopy() *ManagedProductDescriptor {
	if in == nil {
		return nil
	}
	out := new(ManagedProductDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleGroupConfig) DeepCopyInto(out *ManagedRuleGroupConfig) {
	*out = *in
	if in.AWSManagedRulesACFPRuleSet != nil {
		in, out := &in.AWSManagedRulesACFPRuleSet, &out.AWSManagedRulesACFPRuleSet
		*out = new(AWSManagedRulesACFPRuleSet)
		(*in).DeepCopyInto(*out)
	}
	if in.AWSManagedRulesATPRuleSet != nil {
		in, out := &in.AWSManagedRulesATPRuleSet, &out.AWSManagedRulesATPRuleSet
		*out = new(AWSManagedRulesATPRuleSet)
		(*in).DeepCopyInto(*out)
	}
	if in.AWSManagedRulesBotControlRuleSet != nil {
		in, out := &in.AWSManagedRulesBotControlRuleSet, &out.AWSManagedRulesBotControlRuleSet
		*out = new(AWSManagedRulesBotControlRuleSet)
		(*in).DeepCopyInto(*out)
	}
	if in.LoginPath != nil {
		in, out := &in.LoginPath, &out.LoginPath
		*out = new(string)
		**out = **in
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(PasswordField)
		(*in).DeepCopyInto(*out)
	}
	if in.PayloadType != nil {
		in, out := &in.PayloadType, &out.PayloadType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(UsernameField)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleGroupConfig.
func (in *ManagedRuleGroupConfig) DeepCopy() *ManagedRuleGroupConfig {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleGroupConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleGroupStatement) DeepCopyInto(out *ManagedRuleGroupStatement) {
	*out = *in
	if in.ExcludedRules != nil {
		in, out := &in.ExcludedRules, &out.ExcludedRules
		*out = make([]*ExcludedRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ExcludedRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ManagedRuleGroupConfigs != nil {
		in, out := &in.ManagedRuleGroupConfigs, &out.ManagedRuleGroupConfigs
		*out = make([]*ManagedRuleGroupConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ManagedRuleGroupConfig)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RuleActionOverrides != nil {
		in, out := &in.RuleActionOverrides, &out.RuleActionOverrides
		*out = make([]*RuleActionOverride, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RuleActionOverride)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VendorName != nil {
		in, out := &in.VendorName, &out.VendorName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleGroupStatement.
func (in *ManagedRuleGroupStatement) DeepCopy() *ManagedRuleGroupStatement {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleGroupStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleGroupSummary) DeepCopyInto(out *ManagedRuleGroupSummary) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.VendorName != nil {
		in, out := &in.VendorName, &out.VendorName
		*out = new(string)
		**out = **in
	}
	if in.VersioningSupported != nil {
		in, out := &in.VersioningSupported, &out.VersioningSupported
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleGroupSummary.
func (in *ManagedRuleGroupSummary) DeepCopy() *ManagedRuleGroupSummary {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleGroupSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleGroupVersion) DeepCopyInto(out *ManagedRuleGroupVersion) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleGroupVersion.
func (in *ManagedRuleGroupVersion) DeepCopy() *ManagedRuleGroupVersion {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleGroupVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleSet) DeepCopyInto(out *ManagedRuleSet) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelNamespace != nil {
		in, out := &in.LabelNamespace, &out.LabelNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RecommendedVersion != nil {
		in, out := &in.RecommendedVersion, &out.RecommendedVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleSet.
func (in *ManagedRuleSet) DeepCopy() *ManagedRuleSet {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleSetSummary) DeepCopyInto(out *ManagedRuleSetSummary) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelNamespace != nil {
		in, out := &in.LabelNamespace, &out.LabelNamespace
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleSetSummary.
func (in *ManagedRuleSetSummary) DeepCopy() *ManagedRuleSetSummary {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleSetSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRuleSetVersion) DeepCopyInto(out *ManagedRuleSetVersion) {
	*out = *in
	if in.AssociatedRuleGroupARN != nil {
		in, out := &in.AssociatedRuleGroupARN, &out.AssociatedRuleGroupARN
		*out = new(string)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRuleSetVersion.
func (in *ManagedRuleSetVersion) DeepCopy() *ManagedRuleSetVersion {
	if in == nil {
		return nil
	}
	out := new(ManagedRuleSetVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileSDKRelease) DeepCopyInto(out *MobileSDKRelease) {
	*out = *in
	if in.ReleaseVersion != nil {
		in, out := &in.ReleaseVersion, &out.ReleaseVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileSDKRelease.
func (in *MobileSDKRelease) DeepCopy() *MobileSDKRelease {
	if in == nil {
		return nil
	}
	out := new(MobileSDKRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotStatement) DeepCopyInto(out *NotStatement) {
	*out = *in
	if in.Statement != nil {
		in, out := &in.Statement, &out.Statement
		*out = new(Statement)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotStatement.
func (in *NotStatement) DeepCopy() *NotStatement {
	if in == nil {
		return nil
	}
	out := new(NotStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideAction) DeepCopyInto(out *OverrideAction) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(CountAction)
		(*in).DeepCopyInto(*out)
	}
	if in.None != nil {
		in, out := &in.None, &out.None
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideAction.
func (in *OverrideAction) DeepCopy() *OverrideAction {
	if in == nil {
		return nil
	}
	out := new(OverrideAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordField) DeepCopyInto(out *PasswordField) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordField.
func (in *PasswordField) DeepCopy() *PasswordField {
	if in == nil {
		return nil
	}
	out := new(PasswordField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberField) DeepCopyInto(out *PhoneNumberField) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberField.
func (in *PhoneNumberField) DeepCopy() *PhoneNumberField {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateBasedStatement) DeepCopyInto(out *RateBasedStatement) {
	*out = *in
	if in.AggregateKeyType != nil {
		in, out := &in.AggregateKeyType, &out.AggregateKeyType
		*out = new(string)
		**out = **in
	}
	if in.CustomKeys != nil {
		in, out := &in.CustomKeys, &out.CustomKeys
		*out = make([]*RateBasedStatementCustomKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RateBasedStatementCustomKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EvaluationWindowSec != nil {
		in, out := &in.EvaluationWindowSec, &out.EvaluationWindowSec
		*out = new(int64)
		**out = **in
	}
	if in.ForwardedIPConfig != nil {
		in, out := &in.ForwardedIPConfig, &out.ForwardedIPConfig
		*out = new(ForwardedIPConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateBasedStatement.
func (in *RateBasedStatement) DeepCopy() *RateBasedStatement {
	if in == nil {
		return nil
	}
	out := new(RateBasedStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateBasedStatementCustomKey) DeepCopyInto(out *RateBasedStatementCustomKey) {
	*out = *in
	if in.Cookie != nil {
		in, out := &in.Cookie, &out.Cookie
		*out = new(RateLimitCookie)
		(*in).DeepCopyInto(*out)
	}
	if in.ForwardedIP != nil {
		in, out := &in.ForwardedIP, &out.ForwardedIP
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(RateLimitHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LabelNamespace != nil {
		in, out := &in.LabelNamespace, &out.LabelNamespace
		*out = new(RateLimitLabelNamespace)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryArgument != nil {
		in, out := &in.QueryArgument, &out.QueryArgument
		*out = new(RateLimitQueryArgument)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = new(RateLimitQueryString)
		(*in).DeepCopyInto(*out)
	}
	if in.URIPath != nil {
		in, out := &in.URIPath, &out.URIPath
		*out = new(RateLimitURIPath)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateBasedStatementCustomKey.
func (in *RateBasedStatementCustomKey) DeepCopy() *RateBasedStatementCustomKey {
	if in == nil {
		return nil
	}
	out := new(RateBasedStatementCustomKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateBasedStatementManagedKeysIPSet) DeepCopyInto(out *RateBasedStatementManagedKeysIPSet) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPAddressVersion != nil {
		in, out := &in.IPAddressVersion, &out.IPAddressVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateBasedStatementManagedKeysIPSet.
func (in *RateBasedStatementManagedKeysIPSet) DeepCopy() *RateBasedStatementManagedKeysIPSet {
	if in == nil {
		return nil
	}
	out := new(RateBasedStatementManagedKeysIPSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitCookie) DeepCopyInto(out *RateLimitCookie) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitCookie.
func (in *RateLimitCookie) DeepCopy() *RateLimitCookie {
	if in == nil {
		return nil
	}
	out := new(RateLimitCookie)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitHeader) DeepCopyInto(out *RateLimitHeader) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitHeader.
func (in *RateLimitHeader) DeepCopy() *RateLimitHeader {
	if in == nil {
		return nil
	}
	out := new(RateLimitHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitLabelNamespace) DeepCopyInto(out *RateLimitLabelNamespace) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitLabelNamespace.
func (in *RateLimitLabelNamespace) DeepCopy() *RateLimitLabelNamespace {
	if in == nil {
		return nil
	}
	out := new(RateLimitLabelNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitQueryArgument) DeepCopyInto(out *RateLimitQueryArgument) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitQueryArgument.
func (in *RateLimitQueryArgument) DeepCopy() *RateLimitQueryArgument {
	if in == nil {
		return nil
	}
	out := new(RateLimitQueryArgument)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitQueryString) DeepCopyInto(out *RateLimitQueryString) {
	*out = *in
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitQueryString.
func (in *RateLimitQueryString) DeepCopy() *RateLimitQueryString {
	if in == nil {
		return nil
	}
	out := new(RateLimitQueryString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitURIPath) DeepCopyInto(out *RateLimitURIPath) {
	*out = *in
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitURIPath.
func (in *RateLimitURIPath) DeepCopy() *RateLimitURIPath {
	if in == nil {
		return nil
	}
	out := new(RateLimitURIPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Regex) DeepCopyInto(out *Regex) {
	*out = *in
	if in.RegexString != nil {
		in, out := &in.RegexString, &out.RegexString
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Regex.
func (in *Regex) DeepCopy() *Regex {
	if in == nil {
		return nil
	}
	out := new(Regex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexMatchStatement) DeepCopyInto(out *RegexMatchStatement) {
	*out = *in
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.RegexString != nil {
		in, out := &in.RegexString, &out.RegexString
		*out = new(string)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexMatchStatement.
func (in *RegexMatchStatement) DeepCopy() *RegexMatchStatement {
	if in == nil {
		return nil
	}
	out := new(RegexMatchStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexPatternSet) DeepCopyInto(out *RegexPatternSet) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexPatternSet.
func (in *RegexPatternSet) DeepCopy() *RegexPatternSet {
	if in == nil {
		return nil
	}
	out := new(RegexPatternSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexPatternSetReferenceStatement) DeepCopyInto(out *RegexPatternSetReferenceStatement) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexPatternSetReferenceStatement.
func (in *RegexPatternSetReferenceStatement) DeepCopy() *RegexPatternSetReferenceStatement {
	if in == nil {
		return nil
	}
	out := new(RegexPatternSetReferenceStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegexPatternSetSummary) DeepCopyInto(out *RegexPatternSetSummary) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegexPatternSetSummary.
func (in *RegexPatternSetSummary) DeepCopy() *RegexPatternSetSummary {
	if in == nil {
		return nil
	}
	out := new(RegexPatternSetSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReleaseSummary) DeepCopyInto(out *ReleaseSummary) {
	*out = *in
	if in.ReleaseVersion != nil {
		in, out := &in.ReleaseVersion, &out.ReleaseVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReleaseSummary.
func (in *ReleaseSummary) DeepCopy() *ReleaseSummary {
	if in == nil {
		return nil
	}
	out := new(ReleaseSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestInspection) DeepCopyInto(out *RequestInspection) {
	*out = *in
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(PasswordField)
		(*in).DeepCopyInto(*out)
	}
	if in.PayloadType != nil {
		in, out := &in.PayloadType, &out.PayloadType
		*out = new(string)
		**out = **in
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(UsernameField)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestInspection.
func (in *RequestInspection) DeepCopy() *RequestInspection {
	if in == nil {
		return nil
	}
	out := new(RequestInspection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestInspectionACFP) DeepCopyInto(out *RequestInspectionACFP) {
	*out = *in
	if in.AddressFields != nil {
		in, out := &in.AddressFields, &out.AddressFields
		*out = make([]*AddressField, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AddressField)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.EmailField != nil {
		in, out := &in.EmailField, &out.EmailField
		*out = new(EmailField)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordField != nil {
		in, out := &in.PasswordField, &out.PasswordField
		*out = new(PasswordField)
		(*in).DeepCopyInto(*out)
	}
	if in.PayloadType != nil {
		in, out := &in.PayloadType, &out.PayloadType
		*out = new(string)
		**out = **in
	}
	if in.PhoneNumberFields != nil {
		in, out := &in.PhoneNumberFields, &out.PhoneNumberFields
		*out = make([]*PhoneNumberField, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(PhoneNumberField)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UsernameField != nil {
		in, out := &in.UsernameField, &out.UsernameField
		*out = new(UsernameField)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestInspectionACFP.
func (in *RequestInspectionACFP) DeepCopy() *RequestInspectionACFP {
	if in == nil {
		return nil
	}
	out := new(RequestInspectionACFP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInspection) DeepCopyInto(out *ResponseInspection) {
	*out = *in
	if in.BodyContains != nil {
		in, out := &in.BodyContains, &out.BodyContains
		*out = new(ResponseInspectionBodyContains)
		(*in).DeepCopyInto(*out)
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(ResponseInspectionHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.JSON != nil {
		in, out := &in.JSON, &out.JSON
		*out = new(ResponseInspectionJSON)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(ResponseInspectionStatusCode)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInspection.
func (in *ResponseInspection) DeepCopy() *ResponseInspection {
	if in == nil {
		return nil
	}
	out := new(ResponseInspection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInspectionBodyContains) DeepCopyInto(out *ResponseInspectionBodyContains) {
	*out = *in
	if in.FailureStrings != nil {
		in, out := &in.FailureStrings, &out.FailureStrings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SuccessStrings != nil {
		in, out := &in.SuccessStrings, &out.SuccessStrings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInspectionBodyContains.
func (in *ResponseInspectionBodyContains) DeepCopy() *ResponseInspectionBodyContains {
	if in == nil {
		return nil
	}
	out := new(ResponseInspectionBodyContains)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInspectionHeader) DeepCopyInto(out *ResponseInspectionHeader) {
	*out = *in
	if in.FailureValues != nil {
		in, out := &in.FailureValues, &out.FailureValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SuccessValues != nil {
		in, out := &in.SuccessValues, &out.SuccessValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInspectionHeader.
func (in *ResponseInspectionHeader) DeepCopy() *ResponseInspectionHeader {
	if in == nil {
		return nil
	}
	out := new(ResponseInspectionHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInspectionJSON) DeepCopyInto(out *ResponseInspectionJSON) {
	*out = *in
	if in.FailureValues != nil {
		in, out := &in.FailureValues, &out.FailureValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.SuccessValues != nil {
		in, out := &in.SuccessValues, &out.SuccessValues
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInspectionJSON.
func (in *ResponseInspectionJSON) DeepCopy() *ResponseInspectionJSON {
	if in == nil {
		return nil
	}
	out := new(ResponseInspectionJSON)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInspectionStatusCode) DeepCopyInto(out *ResponseInspectionStatusCode) {
	*out = *in
	if in.FailureCodes != nil {
		in, out := &in.FailureCodes, &out.FailureCodes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
	if in.SuccessCodes != nil {
		in, out := &in.SuccessCodes, &out.SuccessCodes
		*out = make([]*int64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(int64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInspectionStatusCode.
func (in *ResponseInspectionStatusCode) DeepCopy() *ResponseInspectionStatusCode {
	if in == nil {
		return nil
	}
	out := new(ResponseInspectionStatusCode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rule) DeepCopyInto(out *Rule) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(RuleAction)
		(*in).DeepCopyInto(*out)
	}
	if in.CaptchaConfig != nil {
		in, out := &in.CaptchaConfig, &out.CaptchaConfig
		*out = new(CaptchaConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ChallengeConfig != nil {
		in, out := &in.ChallengeConfig, &out.ChallengeConfig
		*out = new(ChallengeConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OverrideAction != nil {
		in, out := &in.OverrideAction, &out.OverrideAction
		*out = new(OverrideAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.RuleLabels != nil {
		in, out := &in.RuleLabels, &out.RuleLabels
		*out = make([]*Label, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Label)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Statement != nil {
		in, out := &in.Statement, &out.Statement
		*out = new(Statement)
		(*in).DeepCopyInto(*out)
	}
	if in.VisibilityConfig != nil {
		in, out := &in.VisibilityConfig, &out.VisibilityConfig
		*out = new(VisibilityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rule.
func (in *Rule) DeepCopy() *Rule {
	if in == nil {
		return nil
	}
	out := new(Rule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleAction) DeepCopyInto(out *RuleAction) {
	*out = *in
	if in.Allow != nil {
		in, out := &in.Allow, &out.Allow
		*out = new(AllowAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Block != nil {
		in, out := &in.Block, &out.Block
		*out = new(BlockAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Captcha != nil {
		in, out := &in.Captcha, &out.Captcha
		*out = new(CaptchaAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Challenge != nil {
		in, out := &in.Challenge, &out.Challenge
		*out = new(ChallengeAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(CountAction)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleAction.
func (in *RuleAction) DeepCopy() *RuleAction {
	if in == nil {
		return nil
	}
	out := new(RuleAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleActionOverride) DeepCopyInto(out *RuleActionOverride) {
	*out = *in
	if in.ActionToUse != nil {
		in, out := &in.ActionToUse, &out.ActionToUse
		*out = new(RuleAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleActionOverride.
func (in *RuleActionOverride) DeepCopy() *RuleActionOverride {
	if in == nil {
		return nil
	}
	out := new(RuleActionOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroup) DeepCopyInto(out *RuleGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroup.
func (in *RuleGroup) DeepCopy() *RuleGroup {
	if in == nil {
		return nil
	}
	out := new(RuleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupList) DeepCopyInto(out *RuleGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RuleGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupList.
func (in *RuleGroupList) DeepCopy() *RuleGroupList {
	if in == nil {
		return nil
	}
	out := new(RuleGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RuleGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupReferenceStatement) DeepCopyInto(out *RuleGroupReferenceStatement) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.ExcludedRules != nil {
		in, out := &in.ExcludedRules, &out.ExcludedRules
		*out = make([]*ExcludedRule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ExcludedRule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.RuleActionOverrides != nil {
		in, out := &in.RuleActionOverrides, &out.RuleActionOverrides
		*out = make([]*RuleActionOverride, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RuleActionOverride)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupReferenceStatement.
func (in *RuleGroupReferenceStatement) DeepCopy() *RuleGroupReferenceStatement {
	if in == nil {
		return nil
	}
	out := new(RuleGroupReferenceStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupSpec) DeepCopyInto(out *RuleGroupSpec) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int64)
		**out = **in
	}
	if in.CustomResponseBodies != nil {
		in, out := &in.CustomResponseBodies, &out.CustomResponseBodies
		*out = make(map[string]*CustomResponseBody, len(*in))
		for key, val := range *in {
			var outVal *CustomResponseBody
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(CustomResponseBody)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]*Rule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Rule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VisibilityConfig != nil {
		in, out := &in.VisibilityConfig, &out.VisibilityConfig
		*out = new(VisibilityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupSpec.
func (in *RuleGroupSpec) DeepCopy() *RuleGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RuleGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupStatus) DeepCopyInto(out *RuleGroupStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupStatus.
func (in *RuleGroupStatus) DeepCopy() *RuleGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RuleGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroupSummary) DeepCopyInto(out *RuleGroupSummary) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroupSummary.
func (in *RuleGroupSummary) DeepCopy() *RuleGroupSummary {
	if in == nil {
		return nil
	}
	out := new(RuleGroupSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleGroup_SDK) DeepCopyInto(out *RuleGroup_SDK) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.AvailableLabels != nil {
		in, out := &in.AvailableLabels, &out.AvailableLabels
		*out = make([]*LabelSummary, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LabelSummary)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(int64)
		**out = **in
	}
	if in.ConsumedLabels != nil {
		in, out := &in.ConsumedLabels, &out.ConsumedLabels
		*out = make([]*LabelSummary, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(LabelSummary)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CustomResponseBodies != nil {
		in, out := &in.CustomResponseBodies, &out.CustomResponseBodies
		*out = make(map[string]*CustomResponseBody, len(*in))
		for key, val := range *in {
			var outVal *CustomResponseBody
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(CustomResponseBody)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelNamespace != nil {
		in, out := &in.LabelNamespace, &out.LabelNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]*Rule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Rule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VisibilityConfig != nil {
		in, out := &in.VisibilityConfig, &out.VisibilityConfig
		*out = new(VisibilityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleGroup_SDK.
func (in *RuleGroup_SDK) DeepCopy() *RuleGroup_SDK {
	if in == nil {
		return nil
	}
	out := new(RuleGroup_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleSummary) DeepCopyInto(out *RuleSummary) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(RuleAction)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleSummary.
func (in *RuleSummary) DeepCopy() *RuleSummary {
	if in == nil {
		return nil
	}
	out := new(RuleSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLIMatchStatement) DeepCopyInto(out *SQLIMatchStatement) {
	*out = *in
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.SensitivityLevel != nil {
		in, out := &in.SensitivityLevel, &out.SensitivityLevel
		*out = new(string)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLIMatchStatement.
func (in *SQLIMatchStatement) DeepCopy() *SQLIMatchStatement {
	if in == nil {
		return nil
	}
	out := new(SQLIMatchStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampledHTTPRequest) DeepCopyInto(out *SampledHTTPRequest) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]*Label, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Label)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ResponseCodeSent != nil {
		in, out := &in.ResponseCodeSent, &out.ResponseCodeSent
		*out = new(int64)
		**out = **in
	}
	if in.RuleNameWithinRuleGroup != nil {
		in, out := &in.RuleNameWithinRuleGroup, &out.RuleNameWithinRuleGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampledHTTPRequest.
func (in *SampledHTTPRequest) DeepCopy() *SampledHTTPRequest {
	if in == nil {
		return nil
	}
	out := new(SampledHTTPRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleHeader) DeepCopyInto(out *SingleHeader) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleHeader.
func (in *SingleHeader) DeepCopy() *SingleHeader {
	if in == nil {
		return nil
	}
	out := new(SingleHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleQueryArgument) DeepCopyInto(out *SingleQueryArgument) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleQueryArgument.
func (in *SingleQueryArgument) DeepCopy() *SingleQueryArgument {
	if in == nil {
		return nil
	}
	out := new(SingleQueryArgument)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SizeConstraintStatement) DeepCopyInto(out *SizeConstraintStatement) {
	*out = *in
	if in.ComparisonOperator != nil {
		in, out := &in.ComparisonOperator, &out.ComparisonOperator
		*out = new(string)
		**out = **in
	}
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SizeConstraintStatement.
func (in *SizeConstraintStatement) DeepCopy() *SizeConstraintStatement {
	if in == nil {
		return nil
	}
	out := new(SizeConstraintStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Statement) DeepCopyInto(out *Statement) {
	*out = *in
	if in.ByteMatchStatement != nil {
		in, out := &in.ByteMatchStatement, &out.ByteMatchStatement
		*out = new(ByteMatchStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.GeoMatchStatement != nil {
		in, out := &in.GeoMatchStatement, &out.GeoMatchStatement
		*out = new(GeoMatchStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.IPSetReferenceStatement != nil {
		in, out := &in.IPSetReferenceStatement, &out.IPSetReferenceStatement
		*out = new(IPSetReferenceStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelMatchStatement != nil {
		in, out := &in.LabelMatchStatement, &out.LabelMatchStatement
		*out = new(LabelMatchStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagedRuleGroupStatement != nil {
		in, out := &in.ManagedRuleGroupStatement, &out.ManagedRuleGroupStatement
		*out = new(ManagedRuleGroupStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.RateBasedStatement != nil {
		in, out := &in.RateBasedStatement, &out.RateBasedStatement
		*out = new(RateBasedStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.RegexMatchStatement != nil {
		in, out := &in.RegexMatchStatement, &out.RegexMatchStatement
		*out = new(RegexMatchStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.RegexPatternSetReferenceStatement != nil {
		in, out := &in.RegexPatternSetReferenceStatement, &out.RegexPatternSetReferenceStatement
		*out = new(RegexPatternSetReferenceStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.RuleGroupReferenceStatement != nil {
		in, out := &in.RuleGroupReferenceStatement, &out.RuleGroupReferenceStatement
		*out = new(RuleGroupReferenceStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.SizeConstraintStatement != nil {
		in, out := &in.SizeConstraintStatement, &out.SizeConstraintStatement
		*out = new(SizeConstraintStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.SQLIMatchStatement != nil {
		in, out := &in.SQLIMatchStatement, &out.SQLIMatchStatement
		*out = new(SQLIMatchStatement)
		(*in).DeepCopyInto(*out)
	}
	if in.XSSMatchStatement != nil {
		in, out := &in.XSSMatchStatement, &out.XSSMatchStatement
		*out = new(XSSMatchStatement)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Statement.
func (in *Statement) DeepCopy() *Statement {
	if in == nil {
		return nil
	}
	out := new(Statement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagInfoForResource) DeepCopyInto(out *TagInfoForResource) {
	*out = *in
	if in.ResourceARN != nil {
		in, out := &in.ResourceARN, &out.ResourceARN
		*out = new(string)
		**out = **in
	}
	if in.TagList != nil {
		in, out := &in.TagList, &out.TagList
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagInfoForResource.
func (in *TagInfoForResource) DeepCopy() *TagInfoForResource {
	if in == nil {
		return nil
	}
	out := new(TagInfoForResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTransformation) DeepCopyInto(out *TextTransformation) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTransformation.
func (in *TextTransformation) DeepCopy() *TextTransformation {
	if in == nil {
		return nil
	}
	out := new(TextTransformation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameField) DeepCopyInto(out *UsernameField) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameField.
func (in *UsernameField) DeepCopy() *UsernameField {
	if in == nil {
		return nil
	}
	out := new(UsernameField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionToPublish) DeepCopyInto(out *VersionToPublish) {
	*out = *in
	if in.AssociatedRuleGroupARN != nil {
		in, out := &in.AssociatedRuleGroupARN, &out.AssociatedRuleGroupARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionToPublish.
func (in *VersionToPublish) DeepCopy() *VersionToPublish {
	if in == nil {
		return nil
	}
	out := new(VersionToPublish)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VisibilityConfig) DeepCopyInto(out *VisibilityConfig) {
	*out = *in
	if in.CloudWatchMetricsEnabled != nil {
		in, out := &in.CloudWatchMetricsEnabled, &out.CloudWatchMetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.SampledRequestsEnabled != nil {
		in, out := &in.SampledRequestsEnabled, &out.SampledRequestsEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VisibilityConfig.
func (in *VisibilityConfig) DeepCopy() *VisibilityConfig {
	if in == nil {
		return nil
	}
	out := new(VisibilityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebACL) DeepCopyInto(out *WebACL) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.CaptchaConfig != nil {
		in, out := &in.CaptchaConfig, &out.CaptchaConfig
		*out = new(CaptchaConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ChallengeConfig != nil {
		in, out := &in.ChallengeConfig, &out.ChallengeConfig
		*out = new(ChallengeConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomResponseBodies != nil {
		in, out := &in.CustomResponseBodies, &out.CustomResponseBodies
		*out = make(map[string]*CustomResponseBody, len(*in))
		for key, val := range *in {
			var outVal *CustomResponseBody
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(CustomResponseBody)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LabelNamespace != nil {
		in, out := &in.LabelNamespace, &out.LabelNamespace
		*out = new(string)
		**out = **in
	}
	if in.ManagedByFirewallManager != nil {
		in, out := &in.ManagedByFirewallManager, &out.ManagedByFirewallManager
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]*Rule, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Rule)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.VisibilityConfig != nil {
		in, out := &in.VisibilityConfig, &out.VisibilityConfig
		*out = new(VisibilityConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebACL.
func (in *WebACL) DeepCopy() *WebACL {
	if in == nil {
		return nil
	}
	out := new(WebACL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebACLSummary) DeepCopyInto(out *WebACLSummary) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LockToken != nil {
		in, out := &in.LockToken, &out.LockToken
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebACLSummary.
func (in *WebACLSummary) DeepCopy() *WebACLSummary {
	if in == nil {
		return nil
	}
	out := new(WebACLSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *XSSMatchStatement) DeepCopyInto(out *XSSMatchStatement) {
	*out = *in
	if in.FieldToMatch != nil {
		in, out := &in.FieldToMatch, &out.FieldToMatch
		*out = new(FieldToMatch)
		(*in).DeepCopyInto(*out)
	}
	if in.TextTransformations != nil {
		in, out := &in.TextTransformations, &out.TextTransformations
		*out = make([]*TextTransformation, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(TextTransformation)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new XSSMatchStatement.
func (in *XSSMatchStatement) DeepCopy() *XSSMatchStatement {
	if in == nil {
		return nil
	}
	out := new(XSSMatchStatement)
	in.DeepCopyInto(out)
	return out
}
